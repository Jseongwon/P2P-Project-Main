<TCP/IP에 대해서>

TCP/IP는 대표적인 광역 네트워크 프로토콜입니다. 본래 미국의 군사 네트워크에서 활용하였던 프로토콜이었으나, 이제는 전 세계를 하나로 묶는 네트워크 프로토콜로 발전하였습니다. 이런 역사 이야기는 생략하고 어떻게 동작하는지 모르는 독자를 위해 간단하게 구조를 설명하도록 하겠습니다.

독자 여러분이 지금 당장 브라우저를 실행해서 URL이나 IP주소를 입력하면 해당 사이트에 접속해서 웹 페이지가 열립니다. 너무도 간단해 보이지만 여기에는 아주 복잡한 네트워킹 과정이 담겨 있습니다. 웹 통신 프로토콜로 HTTP를 이용하는데, 이 프로토콜은 TCP/IP 프로토콜을 기반으로 하고 있습니다. 따라서 TCP/IP 프로토콜을 먼저 이해해야 합니다.

우리 일상과 연결지어 생각하면 아주 쉽게 이해할 수 있습니다.

친구에게 물건을 택배로 보낸다고 가정하겠습니다. 먼저 할 일은 1)보낼 물건을 포장하는 일입니다. 만일 머그컵을 보낸다면 운반 중에 깨지는 일이 없도록 당연히 포장해야 합니다. 그런 다음에는 끈이나 테이프로 튼튼하게 마무리하고 2)친구의 집 주소를 송장의 받는 사람 주소에 쓰게 됩니다. 만일 친구가 서울에 산다면 주소는 분명히 '서울시 XX구 YY동 ZZ번지' 정도일 것입니다. 이렇게 송장에는 반드시 받는 사람과 받는 사람 주소를 함께 적습니다. 이렇게 하면 보낼 준비는 일단 끝난 셈입니다.

그다음 택배회사에 전화를 걸 것이고, 택배회사에서 물건을 가지러 오면 3)택배 기사에게 물건을 전달하고, 수령한 물건을 택배회사에서는 배달지에 따라 분류해서 지역별 집결지로 보냅니다. 그런 다음 택배 기사는 배달지에 도착해서 4)받는 사람 주소에 친구가 정말 사는지 확인하고 물건을 전달합니다. 5)물건을 받은 친구는 서명을 하고 모든 과정이 마무리됩니다.

지금 이야기를 이해한다면 TCP/IP 네트워크의 기본 원리를 충분히 이해할 수 있습니다.

이제 역으로 일상의 예를 TCP/IP 네트워크에 맞춰서 설명하겠습니다.

전 세계를 연결하는 TCP/IP 네트워크에 접속하려면 IP 주소 하나를 갖고 있어야 합니다. 이 주소는 친구의 집 주소와 같은 형식은 아니지만 전 세계에서 중복되지 않는 유일한 숫자(IPv4 체계에서는 32비트 숫자)입니다. 따라서 이 주소만 알면 주소지 컴퓨터로 정보(물건)을 전달할 수 있습니다. 물론 상대뿐만 아니라 나도 유일한 IP주소를 가져야 합니다.

정보를 전달하는 역할은 KT나 SK 브로드밴드와 같은 ISP(택배회사)가 담당합니다. 따라서 인터넷을 통해 정보를 보내려면 ISP에게서 회선을 임대한 후 인터넷에 접속하는 유일한 IP 주소를 할당받고, 상대(친구) 주소로 정보(패킷)을 전송하거나 역으로 수신받습니다. 내부적으로 정보의 흐름을 어떻게 관리하고 처리할 것인지는 전적으로 ISP의 몫입니다.

최종적으로 정보를 수신하는 호스트(주소지의 컴퓨터)의 운영체제는 어떤 프로세스(친구)가 정보(물건)을 수신해야 하는지 확인하여 처리를 완료합니다.

<IP주소>
TCP/IP 네트워크에서는 IP 주소와 포트 번호가 가장 중요합니다. 앞에서 어느 정도 개념 설명을 하였으므로 구체적인 이론을 살펴보겠습니다. 먼저 IP 주소의 구조입니다.

인터넷 프로토콜 버전 4(IPv4)는 32비트 주소 체계를 가지고 있습니다. 32비트는 네 개의 8비트로 재구성되며, 각각의 값은 10진수로 표시하고 구분점(.)으로 나누어집니다. 그러므로 그림의 IP 주소는 192.168.10.9번 주소를 의미합니다.

자신의 IP주소를 확인하려면 ipconfig 유틸리티를 사용해야 하는데, 윈도우 모드가 아니라 명령 모드에서 실행해야 합니다. 그러므로 먼저 cmd.exe를 실행하고, ipconfig 유틸리티를 실행해서 정보를 확인하게 됩니다.

Ipconfig 유틸리티는 IP 주소 말고도 서브넷 마스크와 게이트웨이 정보도 함께 보여줍니다. '/all' 옵션을 주면 더 많은 정보(LAN카드의 하드웨어 주소 같은 정보)를 볼 수 있습니다. 그림의 IP 주소(192.168.10.6)는 그림 37-1에 의하면 C클래스의 IP주소가 됩니다.

IP주소는 네트워크 ID와 호스트 ID로 나누어지는데, 네트워크 ID는 네트워크를 식별하는 주소이고(서울시 XX동 YY동), 호스트 ID는(ZZ번지) 해당 네트워크에 속한 컴퓨터의 주소입니다. 참고로 네트워크 프로그래밍에서는 호스트라는 말을 사용하는데, IP주소를 갖는 장치가 반드시 PC나 서버같은 컴퓨터만이 아니라 다양한 네트워크 장비도 될 수 있기 때문입니다.

A 클래스의 IP주소는 총 2^8개 즉, 256(0~255)개가 있으며, 인터넷의 모체가 된 네트워크가 미국에서 만들어졌기 때문인지 모두 미국이 소유하고 있습니다. B클래스의 IP주소는 2^16(65536)개가 있고, C클래스의 IP주소는 2^24(16777216)개가 있습니다. D 클래스는 특수한 목적으로 예약되어 있어서 일반적인 용도로는 사용하지 않습니다.

<소켓>
일반적으로 네트워크 프로그래밍이라 하면 TCP/IP 소켓 프로그래밍을 의미합니다. 바꿔서 말하면 소켓 프로그래밍이 곧 네트워크 프로그래밍이라 할 수 있습니다. 그런데 여기서 말하는 소켓은 기존의 파일 개념과 유사합니다. 일반적으로 파일이라 함은 보조기억장치에 저장된 데이터를 말하기 마련인데, 좀 더 정확히 말하자면 보조기억 장치를 추상화한 것이라고 할 수 있습니다.

하드디스크가 내부적으로 작동되는 원리를 모르더라도 파일을 열고 쓰고 닫을 수 있다면 우리는 하드디스크를 다룬다고 할 수 있습니다. 마찬가지로 보통 LAN카드라고 부르는 네트워크 카드도 하나의 파일로 추상화가 가능합니다. 이렇게 추상화된 파일에 정보를 저장하면 하드디스크에 저장되지 않고 네트워크 카드(LAN카드)를 통해 외부로 전달됩니다. 이것은 매우 중요한 개념입니다.

파일이 장치를 추상화한 것이라고 가정할 때 만일 대상 장치가 네트워크 카드이면 파일이라는 말 대신 소켓이라고 합니다. 그러므로 결국 소켓 프로그래밍이라는 것은 네트워크 카드를 추상화한 파일 포인터를 다루는 일로 정리됩니다. 그래서 우리가 파일에 대해 알고 있는 프로그래밍 지식 대부분이 소켓 프로그래밍에서도 적용됩니다.

파일의 정보를 읽거나 쓰려면 파일을 열어야 하는 것처럼 소켓도 핸들을 열어서 입출력을 하게 됩니다. 물론 사용한 후에는 핸들을 닫아야 합니다. 여기에 조금 전에 설명한 TCP/IP에 대한 기초 지식을 결합하면 소켓에 대한 정의가 끝난다고 볼 수 있습니다. 이 부분에 대해서는 강의에서 더 다룰 것이므로 참고하기 바랍니다.

<TCP/IP 소켓 프로그래밍>
일반적으로 소켓 프로그래밍이라 하면 TCP/IP 소켓 프로그래밍을 말합니다. -이하 예제 설명-