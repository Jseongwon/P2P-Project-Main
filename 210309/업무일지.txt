[과제]
1. 아주 간단한 정보를 주고받을 수 있는 P2P 네트워크 프로그램 작성
2. 커리큘럼 상 문제풀이와 피드백을 주고받을 수 있는 P2P 네트워크 프로그램 작성

[자료 조사]
1. IP 체계
2. P2P
Peer-to-peer wikipedia.pdf
3. 패킷
네트워크_패킷 wikipedia.pdf

[업무 기록]
-TCP/IP Chat Example

다른 컴퓨터에서 연결을 성공하였다. 명령 프롬포트에서 netstat명령어를 실행해 내 컴퓨터에서 사용중인 IP주소와 모든 포트번호를 확인, 그 중 CLOSE_WAIT 상태인 포트 한 개를 ChatServerExample의 포트 번호로 부여하고 실행한 뒤, 타 컴퓨터의 클라이언트에 내 컴퓨터의 IP주소와 Server에 부여한 포트 번호로 실행하여 접속에 성공했다. 내 컴퓨터에서도 클라이언트를 실행하여 타 컴퓨터의 클라이언트와 서로 채팅 가능함을 확인했다. 또한 포트 번호는 일정하지 않은 모양이다.

https://github.com/izrujo/ChatServerExample.git
https://github.com/izrujo/ChatClientExample.git

-TCP/IP Chat Example을 바탕으로

채팅 예제를 바탕으로 TCP/IP 방식의 네트워크 프로그램의 모델을 Fig.1과 같이 확인할 수 있었다.

Fig.1 TCP IP 모델.jpg

소켓과 소켓이 연결되려면 IP주소가 있어야 함은 분명하다. 그러나 P2P방식에서 각각의 클라이언트는 그것을 모른다. 어떤 클라이언트끼리 연결될지는 정해져 있지 않다. 이를 어떻게 해결하냐면, 패킷을 지속적으로 송/수신하여 해결한다고 한다. 따라서 P2P 방식의 모델은 Fig.2처럼 그릴 수 있다. 패킷은 지속적으로 송/수신한다는 의미이다.

Fig.2 P2P 모델.jpg

예제에 대한 클래스 다이어그램은 Fig.3과 같다.

Fig.3 TCP IP 채팅 예제 클래스 다이어그램.jpg

Fig.3을 바탕으로 P2P방식의 채팅 프로그램을 재구성하여 설계하면 Fig.4와 같다.

Fig.4 P2P 채팅 프로그램 클래스 다이어그램.jpg

패킷을 이용해 송/수신하는 방식은 브로드캐스팅 방식이다. 우선 Server 예제는 UDP 브로드캐스팅 수신으로, Client 예제는 UDP 브로드캐스팅 송신으로 바꾸어 시도해보자.

local/ChatBroadcastReceiver
local/ChatBroadcastSender

MFC의 CAsyncSocket 클래스를 이용해서 브로드캐스팅을 하는 것이 잘 안된다. 네트워크에 문자열을 계속해서 보내고, 계속해서 받으려고 했으나 성공하지 못했다. 어떻게 사용하는지 잘 모르겠다. 인터넷에 돌아다니는 예제에 API를 사용하는 코드도 있던데 내일 실행해봐야겠다.

브로드캐스팅의 문제점은 연결 자체와 연결 시간에 대한 안정성이 담보되지 못하는 것이다. 그것을 해결할 수 있는 아이디어로 프로토콜을 설계하는 것이 필요하다. 네트워크에 어떤 지역을 만들어서 그곳에 패킷을 보낼 수는 없을까? 서버를 개념적으로만 만드는 느낌으로.